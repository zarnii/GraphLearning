<Application x:Class="GraphApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:GraphApp"
			 xmlns:viewModel="clr-namespace:GraphApp.ViewModel" 
			 xmlns:view="clr-namespace:GraphApp.View">
	<Application.Resources>
		<!--Стиль для Заголовка вопроса-->
		<Style x:Key="QuestionHeaderStyle" TargetType="TextBlock">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="FontSize" Value="26"/>
		</Style>

		<!--Стиль Grid-->
		<Style x:Key="GridStyle" TargetType="Grid">
			<Setter Property="Background" Value="#FF252526"/>
		</Style>

		<!--Стиль Label-->
		<Style x:Key="LabelStyle" TargetType="Label">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="FontSize" Value="14"/>
		</Style>
		
		<!--Стиль TextBlock-->
		<Style x:Key="TextStyle" TargetType="TextBlock">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="FontSize" Value="20"/>
			<Setter Property="TextWrapping" Value="Wrap"/>
		</Style>
		
		<!--Стиль для варионтов ответа-->
		<Style x:Key="AnswerStyle" TargetType="RadioButton">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="FontSize" Value="20"/>
			<Setter Property="Margin" Value="0, 0, 0, 3"/>
		</Style>
		
		<!--Стиль для Проверенных овтетов.-->
		<Style x:Key="VerifiedAnswerStyle" TargetType="TextBlock">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="FontSize" Value="20"/>
			<Setter Property="Margin" Value="0, 0, 0, 3"/>
		</Style>
		
		<!--Стиль Заголовка-->
		<Style x:Key="Header1Style" TargetType="Label">
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="FontSize" Value="30"/>
		</Style>
		
		<!--Стиль вариантов ответа в ListBox-->
		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	

		<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#3DDADADA"/>
		<SolidColorBrush x:Key="Item.MouseOver.Border" Color="#3DDADADA"/>
		<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3DDADADA"/>
		<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#3DDADADA"/>
		<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
		<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
		
		<Style x:Key="ListBoxItemContainerStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Padding" Value="4,1"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Selector.IsSelectionActive" Value="False"/>
									<Condition Property="IsSelected" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Selector.IsSelectionActive" Value="True"/>
									<Condition Property="IsSelected" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Стиль Левой нопки в ScrollBar-->
		<Style x:Key="ScrollBarButtonLeft" TargetType="{x:Type RepeatButton}">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Canvas Height="18">
							<Polygon Fill="Gray" Points="0,7 10,2 10,12" Margin="0,1.5,0,1.5"/>
						</Canvas>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Стиль Правой кнопки в ScrollBar-->
		<Style x:Key="ScrollBarButtonRight" TargetType="{x:Type RepeatButton}">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Canvas Height="18">
							<Polygon Fill="Gray" Points="18,7 8,2 8,12" Margin="0,1.5,0,1.5"/>
						</Canvas>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Стиль Верхней кнопки прокрутки-->
		<Style x:Key="ScrollBarButtonUp" TargetType="{x:Type RepeatButton}">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Canvas Height="18">
							<Polygon Fill="Gray" Points="8,0 16,16 0,16" Margin="0.5,0,0,0"/>
						</Canvas>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Стиль Нижней кнопки прокрутки-->
		<Style x:Key="ScrollBarButtonDown" TargetType="{x:Type RepeatButton}">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Canvas Height="18">
							<Polygon Fill="Gray" Points="0,0 16,0 8,16" Margin="0.5,0,0,0"/>
						</Canvas>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Стиль полос слева и справа от полосы прокрутки-->
		<Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}"/>
				</Setter.Value>
			</Setter>
		</Style>
		
		<!--Стиль ползунка в Horisontal ScrollBar-->
		<Style x:Key="HorisontalScrollBarThumbStyle" TargetType="{x:Type Thumb}">
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Margin" Value="1,0,1,0" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Rectangle Fill="Gray" Height="10" Opacity="0.5"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Стиль ползунка в Vertical ScrollBar-->
		<Style x:Key="VertivalScrollBarThumbStyle" TargetType="{x:Type Thumb}">
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Margin" Value="1,0,1,0" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Rectangle Fill="Gray" Opacity="0.5"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Стиль Horisontal ScrollBar-->
		<ControlTemplate x:Key="HorisontalScrollBar" TargetType="{x:Type ScrollBar}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="18"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="18"/>
				</Grid.ColumnDefinitions>

				<RepeatButton Grid.Column="0" Height="18"
                          Style="{StaticResource ScrollBarButtonLeft}"
                          Command="ScrollBar.LineLeftCommand" >
				</RepeatButton>
				<Track Name="PART_Track" Grid.Column="1" 
                   IsDirectionReversed="False">
					<Track.DecreaseRepeatButton>
						<RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
						</RepeatButton>
					</Track.DecreaseRepeatButton>
					<Track.Thumb>
						<Thumb Style="{StaticResource HorisontalScrollBarThumbStyle}">
						</Thumb>
					</Track.Thumb>
					<Track.IncreaseRepeatButton>
						<RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
						</RepeatButton>
					</Track.IncreaseRepeatButton>
				</Track>
				<RepeatButton Grid.Column="2" Height="18"
                          Style="{StaticResource ScrollBarButtonRight}"
                          Command="ScrollBar.LineRightCommand">
				</RepeatButton>
			</Grid>
		</ControlTemplate>

		<!--Стиль Vertical ScrollBar-->
		<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="18"/>
					<RowDefinition Height="*"/>
					<RowDefinition Height="18"/>
				</Grid.RowDefinitions>

				<RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarButtonUp}"
                          Command="ScrollBar.LineUpCommand" >
				</RepeatButton>
				<Track Name="PART_Track" Grid.Row="1" 
                   IsDirectionReversed="True">
					<Track.DecreaseRepeatButton>
						<RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
						</RepeatButton>
					</Track.DecreaseRepeatButton>
					<Track.Thumb>
						<Thumb Style="{StaticResource VertivalScrollBarThumbStyle}">
						</Thumb>
					</Track.Thumb>
					<Track.IncreaseRepeatButton>
						<RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
						</RepeatButton>
					</Track.IncreaseRepeatButton>
				</Track>
				<RepeatButton Grid.Row="2" Height="18"
                          Style="{StaticResource ScrollBarButtonDown}"
                          Command="ScrollBar.LineDownCommand">
				</RepeatButton>
			</Grid>
		</ControlTemplate>

		<!--Применение стиля Horisontal ScrollBar-->
		<Style x:Key="HorisontalScrollBarStyle" TargetType="{x:Type ScrollBar}">
			<Setter Property="Template" Value="{StaticResource HorisontalScrollBar}"/>
		</Style>

		<!--Применение стиля Vertical ScrollBar-->
		<Style x:Key="VerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
			<Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
		</Style>

		<!--Стиль кнопки-->
		<Style x:Key="ButtonStyle" TargetType="Button">
			<Setter Property="Background" Value="#3d3d3d"/>
			<Setter Property="BorderBrush" Value="#5348a2"/>
			<Setter Property="BorderThickness" Value="2"/>
			<Setter Property="Foreground" Value="White"/>
			
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border
							BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}">
							
							<ContentPresenter 
								HorizontalAlignment="Center" 
								VerticalAlignment="Center"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="False">
					<Setter Property="Background" Value="#2e2e2e"/>
				</Trigger>
			</Style.Triggers>
		</Style>
		
		
		<DataTemplate DataType="{x:Type viewModel:MainMenuViewModel}">
			<view:MainView/>
		</DataTemplate>
		
		<DataTemplate DataType="{x:Type viewModel:VisualEditorViewModel}">
			<view:VisualEditorView/>
		</DataTemplate>

		<DataTemplate DataType="{x:Type viewModel:LearnLevelsViewModel}">
			<view:LearnLevelsView/>
		</DataTemplate>

		<DataTemplate DataType="{x:Type viewModel:TestViewModel}">
			<view:TestView/>
		</DataTemplate>

		<DataTemplate DataType="{x:Type viewModel:TheoryViewModel}">
			<view:TheoryView/>
		</DataTemplate>

		<DataTemplate DataType="{x:Type viewModel:ScrollTestViewModel}">
			<view:ScrollTestView/>
		</DataTemplate>

		<DataTemplate DataType="{x:Type viewModel:VerifyTestViewModel}">
			<view:VerifyTestView/>
		</DataTemplate>
		
	</Application.Resources>
</Application>
